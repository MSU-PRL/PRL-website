$(function(){var t=$(".prl-back-to-top-btn");t.on("click",function(t){t.preventDefault(),$("html, body").animate({scrollTop:0},2e3)})});const toolTipInfo=document.querySelectorAll(".prl-tooltip-info"),toolTipContainer=document.querySelectorAll(".prl-tooltip");toolTipContainer.forEach(t=>{let e=Math.random().toString(36).substr(2,9);for(t.setAttribute("aria-describedby",e),i=0;i<t.children.length;i++)"prl-tooltip-info"===t.children[i].className&&t.children[i].setAttribute("id",e)});var ariaHiddenAttr=document.createAttribute("aria-hidden");ariaHiddenAttr.value="true";const setAriaHiddenFalse=t=>{t.setAttribute("aria-hidden","false")},setAriaHiddenTrue=t=>{t.setAttribute("aria-hidden","true")};if(toolTipInfo.forEach((t,e)=>{t.getAttribute("aria-hidden")||(t.setAttributeNode(ariaHiddenAttr.cloneNode(!0)),console.warn("Tooltips need to have an aria-hidden attribute. One has been generated for this element",t)),toolTipNode=toolTipInfo[e].parentNode,toolTipNode.addEventListener("mouseenter",function(e){setAriaHiddenFalse(t)},!1),toolTipNode.addEventListener("focus",function(e){setAriaHiddenFalse(t)},!1),toolTipNode.addEventListener("mouseleave",function(e){setAriaHiddenTrue(t)},!1),toolTipNode.addEventListener("blur",function(e){setAriaHiddenTrue(t)},!1)}),"content"in document.createElement("template")){const t=document.createElement("template");if(t.innerHTML='\n    <h2>\n      <button aria-expanded="false">\n        <svg aria-hidden="true" focusable="false" viewBox="0 0 10 10">\n          <rect class="vert" height="8" width="2" y="1" x="4"/>\n          <rect height="2" width="8" y="4" x="1"/>\n        </svg>\n      </button>\n    </h2>\n    <div class="content" hidden>\n      <slot></slot>\n    </div>\n    <style>\n      h2 {\n        margin: 0;\n        color: #2E4D4D;\n      }\n\n      h2 button {\n        all: inherit;\n        box-sizing: border-box;\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        padding: 0.5em 0;\n      }\n\n      h2 button:focus svg {\n        outline: 2px solid;\n      }\n\n      button svg {\n        height: 1em;\n        margin-left: 0.5em;\n        flex-shrink: 0;\n      }\n\n      [aria-expanded="true"] .vert {\n        display: none;\n      }\n\n      [aria-expanded] rect {\n        fill: currentColor;\n      }\n    </style>\n  ',document.head.attachShadow){class e extends HTMLElement{constructor(){super(),this.setAttribute("role","region"),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(t.content.cloneNode(!0)),this.btn=this.shadowRoot.querySelector("h2 button");const e=this.querySelector(":first-child");let n=parseInt(e.tagName.substr(1)),i=e.id;this.heading=this.shadowRoot.querySelector("h2"),i&&(this.heading.id=i),n||(console.warn("The first element inside each <prl-accordion-section> should be a heading of an appropriate level."),n&&2!==n&&this.heading.setAttribute("aria-level",n)),this.btn.innerHTML=e.textContent+this.btn.innerHTML,e.parentNode.removeChild(e),this.switchState=(()=>{let t="true"===this.getAttribute("open")||!1;this.btn.setAttribute("aria-expanded",t),this.shadowRoot.querySelector(".content").hidden=!t}),this.btn.onclick=(()=>{let t="true"===this.getAttribute("open")||!1;this.setAttribute("open",t?"false":"true"),this.heading.id&&!t&&history.pushState(null,null,"#"+this.heading.id)})}connectedCallback(){window.location.hash.substr(1)===this.heading.id&&(this.setAttribute("open","true"),this.btn.focus())}static get observedAttributes(){return["open"]}attributeChangedCallback(t){"open"===t&&this.switchState()}}window.customElements.define("prl-accordion-section",e);const n=document.createElement("div");n.innerHTML='\n      <ul class="controls" aria-label="section controls">\n        <li><button id="expand">expand all</button></li>\n        <li><button id="collapse">collapse all</button></li>\n      </ul>\n      ';const i=document.querySelector("prl-accordion-section"),o=document.querySelectorAll("prl-accordion-section");i.parentNode.insertBefore(n,i),n.addEventListener("click",t=>{let e="expand"===t.target.id;Array.prototype.forEach.call(o,t=>{t.setAttribute("open",e)})})}}